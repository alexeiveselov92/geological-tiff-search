#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
–ê–≤—Ç–æ—Ä: Claude Code Assistant
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.append(os.path.join(os.path.dirname(__file__), "src"))

import config
from rag_system import GeologicalRAGSystem


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    print("üèîÔ∏è  –°–ò–°–¢–ï–ú–ê –ê–ù–ê–õ–ò–ó–ê –ì–ï–û–õ–û–ì–ò–ß–ï–°–ö–ò–• –î–û–ö–£–ú–ï–ù–¢–û–í")
    print("=" * 60)
    print("–ê–Ω–∞–ª–∏–∑ 267 –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –æ—Ç—á–µ—Ç–æ–≤")
    print("–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
    api_key = config.OPENAI_API_KEY
    if not api_key or api_key == "your_api_key_here":
        print("‚ùå –û–®–ò–ë–ö–ê: OpenAI API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("\n–î–ª—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:")
        print("1. –ü–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á –Ω–∞ https://platform.openai.com/")
        print("2. –°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª .env –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ:")
        print("   OPENAI_API_KEY=–≤–∞—à_–∫–ª—é—á_–∑–¥–µ—Å—å")
        print("\n–ò–ª–∏ –∑–∞–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print("   export OPENAI_API_KEY=–≤–∞—à_–∫–ª—é—á_–∑–¥–µ—Å—å")
        return

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
        print("\nüöÄ –ó–∞–≥—Ä—É–∂–∞—é —Å–∏—Å—Ç–µ–º—É...")
        rag = GeologicalRAGSystem()
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!\n")

        # –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤
        print("üí° –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:")
        examples = [
            "–ß—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ –ë–æ—Ä–∏—Å–æ–≤—Å–∫–æ–º –º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–∏?",
            "–ö–∞–∫–∏–µ –ø–æ–ª–µ–∑–Ω—ã–µ –∏—Å–∫–æ–ø–∞–µ–º—ã–µ —É–ø–æ–º–∏–Ω–∞—é—Ç—Å—è?",
            "–í –∫–∞–∫–æ–º –≥–æ–¥—É –ø—Ä–æ–≤–æ–¥–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç—ã?",
            "–ì–¥–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏—è?",
            "–ö—Ç–æ –±—ã–ª –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º –∑–∞ –ø—Ä–æ–µ–∫—Ç—ã?",
        ]
        for i, example in enumerate(examples, 1):
            print(f"   {i}. {example}")

        print("\n" + "=" * 60)
        print("–í–≤–µ–¥–∏—Ç–µ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã")
        print("=" * 60)

        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        while True:
            try:
                question = input("\n‚ùì –í–∞—à –≤–æ–ø—Ä–æ—Å: ").strip()

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—ã—Ö–æ–¥
                if question.lower() in ["–≤—ã—Ö–æ–¥", "exit", "quit", "q", "—Å—Ç–æ–ø"]:
                    print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    break

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π –≤–≤–æ–¥
                if not question:
                    print("üí≠ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
                    continue

                # –ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç
                print("\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –¥–æ–∫—É–º–µ–Ω—Ç—ã...")

                # –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç
                result = rag.ask_question(question)

                # –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                print("\nüìã –û–¢–í–ï–¢:")
                print("=" * 60)
                print(result["answer"])
                print("=" * 60)

                # –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏
                if result["sources"]:
                    print(f"\nüìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result['confidence']}):")
                    for i, source in enumerate(result["sources"], 1):
                        print(f"   {i}. {source['filename']} (—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {source['similarity']:.1%})")
                else:
                    print("\nüìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö")

                # –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
                if result.get("error"):
                    print(f"\n‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {result['error']}")

            except KeyboardInterrupt:
                print("\n\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ Ctrl+C")
                break
            except Exception as e:
                print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
                print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã: {e}")
        print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("- –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á OpenAI")
        print("- –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö")
        print("- –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º")
        return


def show_help():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
    help_text = """
üèîÔ∏è  –°–ò–°–¢–ï–ú–ê –ê–ù–ê–õ–ò–ó–ê –ì–ï–û–õ–û–ì–ò–ß–ï–°–ö–ò–• –î–û–ö–£–ú–ï–ù–¢–û–í

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
    python ask_geo.py          - –∑–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
    python ask_geo.py --help   - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
    - Python 3.7+
    - OpenAI API –∫–ª—é—á –≤ —Ñ–∞–π–ª–µ .env
    - –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –≥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã

–ü–†–ò–ú–ï–†–´ –í–û–ü–†–û–°–û–í:
    - "–ß—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ –º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏—è—Ö –ø–µ—Å–∫–∞ –∏ –≥—Ä–∞–≤–∏—è?"
    - "–í –∫–∞–∫–∏—Ö —Ä–∞–π–æ–Ω–∞—Ö –ø—Ä–æ–≤–æ–¥–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç—ã?"
    - "–ö—Ç–æ –±—ã–ª –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º –∑–∞ –ø—Ä–æ–µ–∫—Ç—ã –≤ 1959 –≥–æ–¥—É?"
    - "–ö–∞–∫–∏–µ –ø–æ–ª–µ–∑–Ω—ã–µ –∏—Å–∫–æ–ø–∞–µ–º—ã–µ —É–ø–æ–º–∏–Ω–∞—é—Ç—Å—è –≤ –æ—Ç—á–µ—Ç–∞—Ö?"

–ö–û–ú–ê–ù–î–´ –í –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–û–ú –†–ï–ñ–ò–ú–ï:
    –≤—ã—Ö–æ–¥, exit, quit, q - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
    
–§–ê–ô–õ–´ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:
    .env - —Å–æ–¥–µ—Ä–∂–∏—Ç OPENAI_API_KEY=–≤–∞—à_–∫–ª—é—á
    
–¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –ü–û–î–î–ï–†–ñ–ö–ê:
    –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–∞—Ö data/
    –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö API –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á OpenAI
    """
    print(help_text)


if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        if sys.argv[1] in ["--help", "-h", "help"]:
            show_help()
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: {sys.argv[1]}")
            print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")
    else:
        main()
